{"version":3,"file":"static/js/779.9999cd5e.chunk.js","mappings":"wQAEaA,E,QAAcC,EAAAA,GAAH,4R,SC0CxB,EAtCgB,WACd,IAAQC,GAAOC,EAAAA,EAAAA,MAAPD,GACR,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAAoCF,EAAAA,EAAAA,WAAS,GAA7C,eAAOG,EAAP,KAAmBC,EAAnB,KAkBA,OAhBAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAc,mCAAG,8GAEOC,EAAAA,EAAAA,IAAWT,GAFlB,OAEbU,EAFa,OAGnBN,EAAWM,EAAYC,KAAKC,SAC5BC,QAAQC,IAAIJ,EAAYC,KAAKC,SACW,IAApCF,EAAYC,KAAKC,QAAQG,QAC3BT,GAAc,GANG,gDASnBO,QAAQC,IAAI,KAAME,SATC,yDAAH,qDAYpBR,GACD,GAAE,CAACR,KAGF,+BACE,UAACF,EAAD,WACGO,IAAc,uBAAG,6CACjBF,EAAQc,KAAI,SAAAC,GAAM,OACjB,2BACE,0BACE,uBAAG,YAAW,IAAEA,EAAOC,WAEzB,uBAAID,EAAOE,YAJJF,EAAOlB,GADC,QAW1B,C,mMCxCKqB,EAAU,mCAEHC,EAAkB,mCAAG,4FACf,kDACXC,EAAS,CACbC,QAASH,GAHqB,SAKFI,EAAAA,EAAAA,IAJb,kDAIiC,CAAEF,OAAAA,IALpB,cAK1BG,EAL0B,yBAMzBA,GANyB,2CAAH,qDASlBC,EAAa,mCAAG,WAAMC,GAAN,kFACrBC,EADqB,6CAC4BD,GACjDL,EAAS,CACbC,QAASH,GAHgB,SAKFI,EAAAA,EAAAA,IAAUI,EAAU,CAAEN,OAAAA,IALpB,cAKrBO,EALqB,yBAMpBA,GANoB,2CAAH,sDASbC,EAAO,mCAAG,WAAMH,GAAN,kFACfC,EADe,6CACkCD,EADlC,YAEfL,EAAS,CACbC,QAASH,GAHU,SAKFI,EAAAA,EAAAA,IAAUI,EAAU,CAAEN,OAAAA,IALpB,cAKfS,EALe,yBAMdA,GANc,2CAAH,sDASPvB,EAAU,mCAAG,WAAMmB,GAAN,kFAClBC,EADkB,6CAC+BD,EAD/B,YAElBL,EAAS,CACbC,QAASH,GAHa,SAKLI,EAAAA,EAAAA,IAAUI,EAAU,CAAEN,OAAAA,IALjB,cAKlBS,EALkB,yBAMjBA,GANiB,2CAAH,sDASVC,EAAe,mCAAG,WAAMC,GAAN,2HAEvBX,EAAS,CACbC,QAASH,EACTc,MAAM,GAAD,OAAKD,IAJiB,SAMRT,EAAAA,EAAAA,IANQ,4CAMY,CAAEF,OAAAA,IANd,cAMvBa,EANuB,yBAOtBA,GAPsB,2CAAH,qD","sources":["components/Reviews/Reviews.styled.js","components/Reviews/Reviews.jsx","services/moviesApi.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const ReviewsList = styled.ul`\n  margin-top: 0;\n  margin-bottom: 0;\n  padding: 0;\n  list-style: none;\n  margin-left: auto;\n  margin-right: auto;\n\n  p {\n    font-size: 14px;\n  }\n\n  li {\n    border-bottom: 1px solid black;\n  }\n\n  li:last-child {\n    border-bottom: none;\n  }\n`;\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getReviews } from 'services/moviesApi';\n\nimport { ReviewsList } from './Reviews.styled';\n\nconst Rewiews = () => {\n  const { id } = useParams();\n  const [reviews, setRewiews] = useState([]);\n  const [isNotFound, setIsNotFound] = useState(false);\n\n  useEffect(() => {\n    const getReviewsList = async () => {\n      try {\n        const reviewsList = await getReviews(id);\n        setRewiews(reviewsList.data.results);\n        console.log(reviewsList.data.results);\n        if (reviewsList.data.results.length === 0) {\n          setIsNotFound(true);\n        }\n      } catch (error) {\n        console.log(error.message);\n      }\n    };\n    getReviewsList();\n  }, [id]);\n\n  return (\n    <>\n      <ReviewsList>\n        {isNotFound && <p>We don't find any reviews for this movie</p>}\n        {reviews.map(review => (\n          <li key={review.id}>\n            <p>\n              <b>Author:</b> {review.author}\n            </p>\n            <p>{review.content}</p>\n          </li>\n        ))}\n      </ReviewsList>\n    </>\n  );\n};\n\nexport default Rewiews;\n","import axios from 'axios';\n\nconst API_KEY = 'f1b5155c1184f9f972000fc60d38fc3a';\n\nexport const getTrendsDayMovies = async () => {\n  const BASE_URL = 'https://api.themoviedb.org/3/trending/movie/day';\n  const params = {\n    api_key: API_KEY,\n  };\n  const moviesDayTrends = await axios.get(BASE_URL, { params });\n  return moviesDayTrends;\n};\n\nexport const getMoviesById = async movieId => {\n  const BASE_URL = `https://api.themoviedb.org/3/movie/${movieId}`;\n  const params = {\n    api_key: API_KEY,\n  };\n  const moviesById = await axios.get(BASE_URL, { params });\n  return moviesById;\n};\n\nexport const getCast = async movieId => {\n  const BASE_URL = `https://api.themoviedb.org/3/movie/${movieId}/credits`;\n  const params = {\n    api_key: API_KEY,\n  };\n  const cast = await axios.get(BASE_URL, { params });\n  return cast;\n};\n\nexport const getReviews = async movieId => {\n  const BASE_URL = `https://api.themoviedb.org/3/movie/${movieId}/reviews`;\n  const params = {\n    api_key: API_KEY,\n  };\n  const cast = await axios.get(BASE_URL, { params });\n  return cast;\n};\n\nexport const getSearchMovies = async querySearch => {\n  const BASE_URL = `https://api.themoviedb.org/3/search/movie`;\n  const params = {\n    api_key: API_KEY,\n    query: `${querySearch}`,\n  };\n  const movies = await axios.get(BASE_URL, { params });\n  return movies;\n};\n"],"names":["ReviewsList","styled","id","useParams","useState","reviews","setRewiews","isNotFound","setIsNotFound","useEffect","getReviewsList","getReviews","reviewsList","data","results","console","log","length","message","map","review","author","content","API_KEY","getTrendsDayMovies","params","api_key","axios","moviesDayTrends","getMoviesById","movieId","BASE_URL","moviesById","getCast","cast","getSearchMovies","querySearch","query","movies"],"sourceRoot":""}